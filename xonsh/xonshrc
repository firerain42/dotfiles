from xonsh.tools import uncapturable


aliases['ll'] = ['ls', '-lh', '--color=always']

$XONSH_SHOW_TRACEBACK = True

$PROMPT = "{env_name:{} }{BOLD_GREEN}{user}@{hostname}{BOLD_BLUE} {cwd}{branch_color}{curr_branch: {}}{NO_COLOR}\n{BOLD_BLUE}{prompt_end}{NO_COLOR} "


@uncapturable
def _lf():
    import tempfile

    lf_path = "/home/lpetrich/.local/bin/lf"

    with tempfile.NamedTemporaryFile() as tempfile:
            @(lf_path) -last-dir-path=@(tempfile.name)
            new_dir = $(cat @(tempfile.name))
            if new_dir != '':
                cd @(new_dir)
                print()
                return 0
            else:
                return 1

aliases['lf'] = _lf


# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
import sys as _sys
from types import ModuleType as _ModuleType
_mod = _ModuleType("xontrib.conda",
                   "Autogenerated from $(/home/lpetrich/.local/share/miniconda3/bin/conda shell.xonsh hook)")
__xonsh__.execer.exec($("/home/lpetrich/.local/share/miniconda3/bin/conda" "shell.xonsh" "hook"),
                      glbs=_mod.__dict__,
                      filename="$(/home/lpetrich/.local/share/miniconda3/bin/conda shell.xonsh hook)")
_sys.modules["xontrib.conda"] = _mod
del _sys, _mod, _ModuleType
# <<< conda initialize <<<

